<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sccddw.test.mapper.DrsrsAllocateDepotOrderDetailMapper" >
  <resultMap id="BaseResultMap" type="com.sccddw.test.entity.testDO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="disaster_material_use_id" property="disasterMaterialUseId" jdbcType="INTEGER" />
    <result column="allocate_material_order_id" property="allocateMaterialOrderId" jdbcType="INTEGER" />
    <result column="allocate_depot_order_id" property="allocateDepotOrderId" jdbcType="INTEGER" />
    <result column="material_info_id" property="materialInfoId" jdbcType="INTEGER" />
    <result column="batch" property="batch" jdbcType="VARCHAR" />
    <result column="storage_year" property="storageYear" jdbcType="VARCHAR" />
    <result column="depot_info_id" property="depotInfoId" jdbcType="INTEGER" />
    <result column="storage_id" property="storageId" jdbcType="INTEGER" />
    <result column="transfer_quantity" property="transferQuantity" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, disaster_material_use_id, allocate_material_order_id, allocate_depot_order_id, 
    material_info_id, batch, storage_year, depot_info_id, storage_id, transfer_quantity
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from drsrs_allocate_depot_order_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from drsrs_allocate_depot_order_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sccddw.test.entity.testDO" >
    insert into drsrs_allocate_depot_order_detail (id, disaster_material_use_id, allocate_material_order_id, 
      allocate_depot_order_id, material_info_id, batch, 
      storage_year, depot_info_id, storage_id, 
      transfer_quantity)
    values (#{id,jdbcType=INTEGER}, #{disasterMaterialUseId,jdbcType=INTEGER}, #{allocateMaterialOrderId,jdbcType=INTEGER}, 
      #{allocateDepotOrderId,jdbcType=INTEGER}, #{materialInfoId,jdbcType=INTEGER}, #{batch,jdbcType=VARCHAR}, 
      #{storageYear,jdbcType=VARCHAR}, #{depotInfoId,jdbcType=INTEGER}, #{storageId,jdbcType=INTEGER}, 
      #{transferQuantity,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sccddw.test.entity.testDO" >
    insert into drsrs_allocate_depot_order_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="disasterMaterialUseId != null" >
        disaster_material_use_id,
      </if>
      <if test="allocateMaterialOrderId != null" >
        allocate_material_order_id,
      </if>
      <if test="allocateDepotOrderId != null" >
        allocate_depot_order_id,
      </if>
      <if test="materialInfoId != null" >
        material_info_id,
      </if>
      <if test="batch != null" >
        batch,
      </if>
      <if test="storageYear != null" >
        storage_year,
      </if>
      <if test="depotInfoId != null" >
        depot_info_id,
      </if>
      <if test="storageId != null" >
        storage_id,
      </if>
      <if test="transferQuantity != null" >
        transfer_quantity,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="disasterMaterialUseId != null" >
        #{disasterMaterialUseId,jdbcType=INTEGER},
      </if>
      <if test="allocateMaterialOrderId != null" >
        #{allocateMaterialOrderId,jdbcType=INTEGER},
      </if>
      <if test="allocateDepotOrderId != null" >
        #{allocateDepotOrderId,jdbcType=INTEGER},
      </if>
      <if test="materialInfoId != null" >
        #{materialInfoId,jdbcType=INTEGER},
      </if>
      <if test="batch != null" >
        #{batch,jdbcType=VARCHAR},
      </if>
      <if test="storageYear != null" >
        #{storageYear,jdbcType=VARCHAR},
      </if>
      <if test="depotInfoId != null" >
        #{depotInfoId,jdbcType=INTEGER},
      </if>
      <if test="storageId != null" >
        #{storageId,jdbcType=INTEGER},
      </if>
      <if test="transferQuantity != null" >
        #{transferQuantity,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sccddw.test.entity.testDO" >
    update drsrs_allocate_depot_order_detail
    <set >
      <if test="disasterMaterialUseId != null" >
        disaster_material_use_id = #{disasterMaterialUseId,jdbcType=INTEGER},
      </if>
      <if test="allocateMaterialOrderId != null" >
        allocate_material_order_id = #{allocateMaterialOrderId,jdbcType=INTEGER},
      </if>
      <if test="allocateDepotOrderId != null" >
        allocate_depot_order_id = #{allocateDepotOrderId,jdbcType=INTEGER},
      </if>
      <if test="materialInfoId != null" >
        material_info_id = #{materialInfoId,jdbcType=INTEGER},
      </if>
      <if test="batch != null" >
        batch = #{batch,jdbcType=VARCHAR},
      </if>
      <if test="storageYear != null" >
        storage_year = #{storageYear,jdbcType=VARCHAR},
      </if>
      <if test="depotInfoId != null" >
        depot_info_id = #{depotInfoId,jdbcType=INTEGER},
      </if>
      <if test="storageId != null" >
        storage_id = #{storageId,jdbcType=INTEGER},
      </if>
      <if test="transferQuantity != null" >
        transfer_quantity = #{transferQuantity,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sccddw.test.entity.testDO" >
    update drsrs_allocate_depot_order_detail
    set disaster_material_use_id = #{disasterMaterialUseId,jdbcType=INTEGER},
      allocate_material_order_id = #{allocateMaterialOrderId,jdbcType=INTEGER},
      allocate_depot_order_id = #{allocateDepotOrderId,jdbcType=INTEGER},
      material_info_id = #{materialInfoId,jdbcType=INTEGER},
      batch = #{batch,jdbcType=VARCHAR},
      storage_year = #{storageYear,jdbcType=VARCHAR},
      depot_info_id = #{depotInfoId,jdbcType=INTEGER},
      storage_id = #{storageId,jdbcType=INTEGER},
      transfer_quantity = #{transferQuantity,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>